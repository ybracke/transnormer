# -*- coding = utf-8 -*-

# Select GPU
gpu = "cuda:0"  # when you did `export CUDA_VISIBLE_DEVICES=1` first
per_process_memory_fraction = 0.9

# Random seed (fix for reproducibility)
random_seed = 42


# Data
[data]
paths_train = [
    "/home/bracke/data/dtaec/jsonl/v06/bracke-split/dtaec-train.jsonl",
    # "data/interim/dtak-v03-1600-1699/dtak-v03-1600-1699-train.jsonl",
    # "data/interim/dtak-v03-1700-1799/dtak-v03-1700-1799-train.jsonl",
    # "data/interim/dtak-v03-1800-1899/dtak-v03-1800-1899-train.jsonl",
    ]

paths_validation = [
    "/home/bracke/data/dtaec/jsonl/v06/bracke-split/dtaec-validation.jsonl",
    # "data/interim/dtak-v03-1600-1699/dtak-v03-1600-1699-validation.jsonl",
    # "data/interim/dtak-v03-1700-1799/dtak-v03-1700-1799-validation.jsonl",
    # "data/interim/dtak-v03-1800-1899/dtak-v03-1800-1899-validation.jsonl",
    ]

paths_test = [
    "/home/bracke/data/dtaec/jsonl/v06/bracke-split/dtaec-test.jsonl",
    # "data/interim/dtak-v03-1600-1699/dtak-v03-1600-1699-test.jsonl",
    # "data/interim/dtak-v03-1700-1799/dtak-v03-1700-1799-test.jsonl",
    # "data/interim/dtak-v03-1800-1899/dtak-v03-1800-1899-test.jsonl",
    ]
n_examples_train = [
    1_000_000_000, # all
    # 10_000,
    # 1_000_000_000,
    ]
n_examples_validation = [
    1_000_000_000, # all
    # 1_000_000_000,
    # 1_000_000_000,
    ]
# not used
n_examples_test = [
    1,
    # 1_000_000_000,
    # 1_000_000_000,
    ]
# reverse_labels = false
# do_shuffle = true

[tokenizer]
tokenizer = "google/byt5-small"
padding = "longest"
min_length_input = 0
max_length_input = 512
# max_length_output = 512
# input_transliterator = "Transliterator1"

# Base model(s)
[language_models]
checkpoint_encoder_decoder = "google/byt5-small"
from_scratch = true

[training_hyperparams]
batch_size = 8
epochs = 10
learning_rate = 0.001
fp16 = false
save_strategy = "epoch"
eval_strategy = "epoch"
logging_strategy = "epoch"
save_total_limit = 3
# output_dir = "./models/models_2024-09-12"
